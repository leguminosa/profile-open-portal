# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: 3.0.0
info:
  version: 1.0.0
  title: User Service
  description: Small API to manage users
  license:
    name: MIT
servers:
  - url: http://localhost:8080
    description: Containerized development environment
paths:
  /register:
    post:
      summary: Creates a new user.
      description: Validates all fullname, phone number, and password before creating the user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        '200':
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /login:
    post:
      summary: Creates a session for the user.
      description: Returns jwt if phone number and password are valid.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        '200':
          description: User logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /v1/profile:
    get:
      summary: Get User Profile
      description: Get profile of the user that is currently logged in.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProfileResponse"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Update logged on user's profile
      description: Update both fullname and phone number if not empty. Phone number can't be duplicate.
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProfileRequest"
      responses:
        '200':
          description: Profile updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProfileResponse"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Conflicted phone number
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      required:
        - fullname
        - phone_number
        - password
      properties:
        fullname:
          type: string
        phone_number:
          type: string
        password:
          type: string
          format: password
    RegisterResponse:
      type: object
      required:
        - user_id
      properties:
        user_id:
          type: integer
          format: int64
    LoginRequest:
      type: object
      required:
        - phone_number
        - password
      properties:
        phone_number:
          type: string
        password:
          type: string
          format: password
    LoginResponse:
      type: object
      required:
        - user_id
        - jwt
      properties:
        user_id:
          type: integer
          format: int64
        jwt:
          type: string
    GetProfileResponse:
      type: object
      required:
        - fullname
        - phone_number
      properties:
        fullname:
          type: string
        phone_number:
          type: string
    UpdateProfileRequest:
      type: object
      required:
        - fullname
        - phone_number
      properties:
        fullname:
          type: string
        phone_number:
          type: string
    UpdateProfileResponse:
      type: object
      required:
        - user_id
      properties:
        user_id:
          type: integer
          format: int64
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
security:
  - bearerAuth: []
